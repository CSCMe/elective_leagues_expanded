namespace = ElectiveLeagues


# AI ruler tries to create a new league
character_event = {
    id = ElectiveLeagues.30
    hide_window = yes
    only_playable = yes # This counts only every count and above ruler.
    ai = yes  # Players instead use a similar decision, create_elective_league

    trigger = {
    	#higher_real_tier_than = BARON #already  checked in league_potential_trigger
        #is_feudal = yes
        league_potential_trigger = yes
        religion_allows_feudal_elective_trigger = yes
        NOT = {has_character_modifier = founding_elective_league}
        NOR = {
            has_law = succ_elective_league
            has_law = succ_tribal_league
        }
        any_independent_ruler = {
            THIS_and_PREV_same_rank_trigger = yes
            THIS_can_join_PREV_league_trigger = yes
            THIS_and_FROM_are_adjacent_trigger = yes
        }
    }

    mean_time_to_happen = {
        years = 1
    }

    immediate = {
        add_character_modifier = {
            name = founding_elective_league
            hidden = no
            years = 1
        }
        character_event = { id = ElectiveLeagues.31 }
    }
}


# ROOT tries to create a new league (players from decision; AI from event ElectiveLeagues.30)
character_event = {
    id = ElectiveLeagues.31
    is_triggered_only = yes
    hide_window = no
    picture = GFX_evt_prospering_province
    desc = elective_league_31_event_DESC
 #   immediate = {

        #any_opinion_modifier_target = {
        #    limit = {
        #        reverse_has_opinion_modifier = {
        #            who = PREV
        #            modifier = opinion_cofounder
        #        }
        #    }
        #    reverse_remove_opinion = {
        #        who = PREV
        #        modifier = opinion_cofounder
        #    }
        #}


    #}
    option = {
        name = elective_league_31_event_yes
        ai_chance = { factor = 100 }
        hidden_tooltip = {
            set_variable = { which = num_cofounders  value = 0 }
            character_event = { id = ElectiveLeagues.32 days = 1}  # Find recursively-adjacent cofounders
            character_event = { id = ElectiveLeagues.35 days = 15}  # Show list of cofounders; allow creating a higher title if >=2 # delay 45 days
        }
    }
    option = {
        name = elective_league_31_event_no
        remove_character_modifier = founding_elective_league
    }
}

# ROOT is counting cofounders (recursive). Realms adjacent to FROM are now eligible to join.
character_event = {
    id = ElectiveLeagues.32
    is_triggered_only = yes
    hide_window = yes
    #desc = ElectiveLeagues_event_32_DESC

    immediate = {
        any_independent_ruler = {
            limit = {
                # Not already in ROOT's league
                NOT = { character = ROOT }
                NOT = { reverse_has_opinion_modifier = { who = PREV  modifier = opinion_cofounder } }

                # Can join ROOT's league...
                THIS_and_PREV_same_rank_trigger = yes
                THIS_can_join_PREV_league_trigger = yes

                # ...by virtue of being adjacent to FROM (who could be ROOT or another cofounder)
                THIS_and_FROM_are_adjacent_trigger = yes
            }

            reverse_opinion = { who = PREV  modifier = opinion_cofounder }
            character_event = { id = ElectiveLeagues.33 }  # Bounce back here with THIS as FROM
        }
    }

    option = {
        name = OK
    }
}

# Bounce event # CONFIRmATION EVENT
character_event = {
    id = ElectiveLeagues.33
    is_triggered_only = yes
    hide_window = no
    desc = ElectiveLeagues_event_33_DESC
    picture = GFX_evt_diplomat_hf

    option = {
        name = accept_league

        ai_chance = { 
            factor = 99 
            modifier = {
                factor = 0.01
                realm_size >= 250
            }
            modifier = {
                factor = 0.02
                realm_size >= 150
                NOT = { realm_size >= 250}
            }
            modifier = {
                factor = 0.2
                OR = {
                    trait = proud
                    trait = stubborn
                }
            }
            modifier = {
                factor = 0.4
                OR = {
                    trait = content
                    trait = cynical
                    trait = dull
                }
            }
            modifier = {
                factor = 1.5
                OR = {
                    trait = trusting
                    trait = gregarious
                    trait = shrewd
                }
            }
        }

        FROM = {
            change_variable = { which = num_cofounders  value = 1 }
            character_event = { id = ElectiveLeagues.32 }
        }
        add_character_modifier = {
            name = founding_elective_league
            hidden = no
            years = 1
        }
    }

    option = {
        name = refuse_league
        ai_chance = {
            factor = 1
        }
        FROM = { 
            character_event = { id = ElectiveLeagues.34 days = 1 }
        }
        reverse_remove_opinion = {
            who = FROM
            modifier = opinion_cofounder
        }
    }
}

#ROOT gets notified about someone refusing to join the league
character_event = {
    id = ElectiveLeagues.34
    desc = ElectiveLeagues_event_34_DESC
    picture = GFX_evt_book_carolingian_script  # ...
    is_triggered_only = yes

    option = {
        name = UNFORTUNATE
        trigger = {
            ROOT = { NOT = { trait = wroth } }
        }
    }
    
    option = {
        tooltip_info_custom = ElectiveLeagues_event_34_WROTH_TOOLTIP
        trigger = {
            ROOT = { trait = wroth }
        }
        name = EVTOPTAHFP30036
        opinion = { who = FROM  modifier = opinion_outraged years = 3}
    }
}

# ROOT has counted their cofounders and may be able to create a new elective realm
character_event = {
    id = ElectiveLeagues.35
    is_triggered_only = yes
    desc = ElectiveLeagues_event_35_DESC
    picture = GFX_evt_state_diplomacy

    option = {
        trigger = {
            tier = COUNT
            OR = {
                check_variable = { which = num_cofounders  value >= 2 }
                AND = {
                    any_player = {
                        reverse_has_opinion_modifier = {
                            who = PREV
                            modifier = opinion_cofounder
                        }
                    }
                    check_variable = { which = num_cofounders  value >= 1 }
                }
            }
            
        }
        name = ElectiveLeagues_event_35_DUCHY
        ai_chance = { factor = 97 }

        primary_title = {
            create_title = {
                tier = DUKE
                landless = no
                temporary = no
                custom_created = yes
                culture = ROOT
                holder = ROOT
                base_title = THIS
                copy_title_laws = yes
                name = ELECTIVE_REALM_NAME_DUKE
                short_name = yes
            }
        }

        create_league_effect = yes
    }

    option = {
        trigger = {
            tier = DUKE
            OR = { #WENN NICHT FNKTIONIER OR ENTFERNEN UND ANY_PLAYER
                check_variable = { which = num_cofounders  value >= 2 }
                AND = {
                    any_player = {
                        reverse_has_opinion_modifier = {
                            who = PREV
                            modifier = opinion_cofounder
                        }
                    }
                    check_variable = { which = num_cofounders  value >= 1 }
                }
            }
        }
        name = ElectiveLeagues_event_35_KINGDOM
        ai_chance = { factor = 97 }

        primary_title = {
            create_title = {
                tier = KING
                landless = no
                temporary = no
                custom_created = yes
                culture = ROOT
                holder = ROOT
                base_title = THIS
                copy_title_laws = yes
                name = ELECTIVE_REALM_NAME_KING
                short_name = yes
            }
        }

        create_league_effect = yes
    }

    option = {
        trigger = {
            tier = KING
            OR = {
                check_variable = { which = num_cofounders  value >= 2 }
                AND = {
                    any_player = {
                        reverse_has_opinion_modifier = {
                            who = PREV
                            modifier = opinion_cofounder
                        }
                    }
                    check_variable = { which = num_cofounders  value >= 1 }
                }
            }
        }
        name = ElectiveLeagues_event_35_EMPIRE
        ai_chance = { factor = 97 }

        primary_title = {
            create_title = {
                tier = EMPEROR
                landless = no
                temporary = no
                custom_created = yes
                culture = ROOT
                holder = ROOT
                base_title = THIS
                copy_title_laws = yes
                name = ELECTIVE_REALM_NAME_EMPEROR
                short_name = yes
            }
        }

        create_league_effect = yes
    }

    option = {
        name = ElectiveLeagues_event_35_NEVER_MIND
        ai_chance = { factor = 3 }
        trigger = {
             check_variable = { which = num_cofounders  value >= 2 }
        }
        remove_character_modifier = founding_elective_league
        any_opinion_modifier_target = {
            limit = {
                reverse_has_opinion_modifier = {
                    who = PREV
                    modifier = opinion_cofounder
                }
            }
            hidden_tooltip = {
                reverse_remove_opinion = {
                    who = PREV
                    modifier = opinion_cofounder
                }
            }
            remove_character_modifier = founding_elective_league
        }
    }

    option = {
        name = ElectiveLeagues_event_35_CANNOT
        ai_chance = { factor = 3 }
        trigger = {
             check_variable = { which = num_cofounders  value < 2 }
        }
        remove_character_modifier = founding_elective_league
        any_opinion_modifier_target = {
            limit = {
                reverse_has_opinion_modifier = {
                    who = PREV
                    modifier = opinion_cofounder
                }
            }
            hidden_tooltip = {
                reverse_remove_opinion = {
                    who = PREV
                    modifier = opinion_cofounder
                }
            }
            remove_character_modifier = founding_elective_league
        }
    }
}


# AI ruler of an elective league tries to vassalize more neighbors
character_event = {
    id = ElectiveLeagues.40
    min_age = 14
    hide_window = yes
    only_independent = yes # Excludes vassals and tributaries and counts only every count and above ruler.
    ai = yes  # Players instead use a targeted decision, vassalize_new_elector

    trigger = {
        primary_title = {
            has_law = succ_feudal_elective
            is_titular = yes
        }
        higher_real_tier_than = COUNT
        independent = yes
        in_revolt = no
    }

    mean_time_to_happen = {
        years = 1
    }

    immediate = {
        any_independent_ruler = {
            limit = {
                lower_real_tier_than = PREV
                NOT = { character = ROOT }
                league_potential_trigger = yes           
                THIS_can_be_elector_of_PREV_trigger = yes
                THIS_can_join_PREV_league_trigger = yes
                THIS_and_FROM_are_adjacent_trigger = yes  # Hoping FROM is treated as ROOT when no FROM...
                NOT = { has_opinion_modifier = { who = ROOT  modifier = opinion_granted_independence } }
            }
            character_event = { id = ElectiveLeagues.46 }
        }
    }
}

# ROOT is asked by FROM to join an existing elective league
# Triggered by AI event ElectiveLeagues.40
# Player decision vassalize_new_elector does NOT use this event because FROMFROM and interaction description
# Todo: add option to players to decline, a persistent opinion modifier for having declined, and a way to undo it...
character_event = {
    id = ElectiveLeagues.46
    desc = ElectiveLeagues_event_46_DESC
    picture = GFX_evt_coronation  # ...
    is_triggered_only = yes

    option = {
        ai_chance = { 
            factor = 10 
        }
        name = accept_league
        if = {
            limit = {
                FROMFROM = {
                    always = yes
                }
            }
            FROM = { #works by making from the this and thus fromfrom the from, makes 
                add_THIS_to_FROM_existing_league_effect = yes
            }
        }
        else = {
            add_THIS_to_FROM_existing_league_effect = yes   
        }
        any_vassal = {
            character_event = { id = ElectiveLeagues.50 }
        }
    }
    option = {
        name = refuse_league
        FROM = { character_event = { id = ElectiveLeagues.34 days = 1 } }
    }
}

#NOTIFY vassals event
character_event = {
    id = ElectiveLeagues.50
    desc = ElectiveLeagues_event_50_DESC
    picture = GFX_evt_coronation  # ...
    is_triggered_only = yes

    option = {
        name = ElectiveLeagues_event_50_Take #This might take power away from us
    }
    option = {
        name = ElectiveLeagues_event_50_Opportunity #or it could pose to be an opportunity
    }
}

##For testing |wipe_council_effect|
#character_event = {
#    id = ElectiveLeagues.60
#    is_triggered_only = yes
#    hide_window = yes
#
#    immediate = {
#        wipe_council_effect = yes
#    }
#}
